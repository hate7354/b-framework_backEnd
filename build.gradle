plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.bellock.framework'
version = '1.0.0'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url "file:///C:/Project/BellockFramework/workspace/repository"
	}
}

// Set source directory
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // 중복 파일을 덮어쓰지 않고 무시
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	implementation 'org.springframework.boot:spring-boot-devtools'
	// H2 데이터베이스를 사용하기 위한 자바 라이브러리 및 JDBC 드라이버를 제공하는 의존성
	developmentOnly 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-starter-data-jpa'
//	testImplementation 'org.junit.jupiter:junit-jupiter'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
//	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'org.apache.commons:commons-configuration2:2.10.0'
	// 자바 빈(Java Bean) 객체를 다루는 데 유용한 유틸리티를 제공
//	implementation 'commons-beanutils:commons-beanutils:1.9.4'
	// 객체 풀(Object Pooling)을 구현하는 데 사용
	implementation 'org.apache.commons:commons-pool2:2.11.1'
	// HTTP 프로토콜을 사용하여 통신하는 클라이언트를 제공하며, 웹 서버와의 통신을 위한 여러 기능을 제공
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	implementation 'org.apache.httpcomponents:httpmime:4.5.14'
	// 자바 객체를 XML로 직렬화하고 역직렬화하는 데 사용되는 라이브러리
	implementation 'com.thoughtworks.xstream:xstream:1.4.20'
	// JSON 데이터 처리(파싱 및 생성)를 위한 기능을 제공
	implementation 'com.fasterxml.jackson.core:jackson-core:2.16.2'
	// JSON 데이터를 Java 객체로 변환하거나 Java 객체를 JSON 데이터로 변환하는 기능
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.2'
	// JSON 직렬화 및 역직렬화 동작을 세밀하게 제어하기 위해 사용되는 다양한 애너테이션을 제공
//	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.2'
	// 자바 객체를 JSON 형식으로 직렬화하고 역직렬화
	implementation 'com.google.code.gson:gson:2.9.0'
	// MyBatis를 쉽게 설정하고 사용할 수 있도록 도와주는 스타터 의존성
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	//  MySQL 데이터베이스와 Java 애플리케이션 간의 연결을 제공하는 JDBC 드라이버
	implementation 'mysql:mysql-connector-java:8.0.30'
	// 표준 컬렉션 클래스 외에도 추가적인 데이터 구조를 제공, ListOrderedMap
	implementation 'org.apache.commons:commons-collections4:4.4'
	// 애플리케이션 컨텍스트, 의존성 주입(DI), AOP(Aspect-Oriented Programming) 등의 기능
	implementation 'org.springframework:spring-core:6.1.4'
	// SQL 쿼리 로깅
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	testImplementation 'ch.qos.logback:logback-classic:1.5.3'
	// Map Struct & lombok
//	implementation 'org.projectlombok:lombok:1.18.30'
//	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
//	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	// Java Bean을 다른 Java Bean으로 변환하는 데 사용되는 MapStruct 라이브러리
//	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
//	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	// ResponseStatusException
	implementation 'org.springframework:spring-web:6.1.5'
	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'javax.mail:javax.mail-api:1.6.2'
	// mariadb DB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	// Java 언어에서 사용되는 어노테이션과 관련된 API를 정의한 라이브러리
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

// BootJar 생성 disable
//bootJar {
//    enabled = false
//}

// test disable
tasks.named('test').configure {
    enabled = false
}
//tasks.named('test') {
//	useJUnitPlatform()
//}
